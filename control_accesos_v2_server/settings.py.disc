"""
Django settings for control_accesos_v2_server project.

Generated by 'django-admin startproject' using Django 1.8.9.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
from django.core.urlresolvers import reverse_lazy

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '9t*@t!k&0gb+e45y4-%rthzj8w))7)879squrtai*xx-h8@%0y'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

DJANGO_APPS = (
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.admin',

)

TERCEROS_APPS = (
    'rest_framework',
    'rest_framework.authtoken',

)

PROPIAS_APPS = (
    'apps.comun',
    'apps.empleado',
    'apps.instalacion',
    'apps.punto_control',
    'apps.usuario',
    'apps.archivo',
    'apps.configuracion',
    'apps.bitacora',
    'apps.reporte',
)

INSTALLED_APPS = DJANGO_APPS + TERCEROS_APPS + PROPIAS_APPS

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'control_accesos_v2_server.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.core.context_processors.static',
                'django.core.context_processors.i18n',
                'django.core.context_processors.media',
            ],
        },
    },
]

WSGI_APPLICATION = 'control_accesos_v2_server.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases
bdopcion = 1
if bdopcion == 0:  # Opcion para uso en un servidor no local
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'NAME': '',
            'USER': '',
            'PASSWORD': '',
            'HOST': '',
            'PORT': '',
        }
    }
elif bdopcion == 1:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'control_acceso_v2.sqlite3'),
        }
    }
elif bdopcion == 2:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'NAME': 'control_acceso_v2',
            'USER': 'postgres',
            'PASSWORD': 'root',
            'HOST': 'localhost',
            'PORT': '5432',
        }
    }
elif bdopcion == 3:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': 'control_acceso_v2',
            'USER': 'root',
            'PASSWORD': '',
            'HOST': '127.0.0.1',
            'PORT': '3306',
        }
    }


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'es-mx'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_ROOT = 'staticfiles'

STATIC_URL = '/static/'

STATICFILES_DIRS = (os.path.join(BASE_DIR, "static"),)

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

MEDIA_URL = '/media/'

LOGIN_URL = reverse_lazy('login')
LOGIN_REDIRECT_URL = reverse_lazy('home_redirect')
LOGOUT_URL = reverse_lazy('logout')
LOGOUT_REDIRECT_URL = reverse_lazy('login')

email_opcion = 0
DEFAULT_FROM_EMAIL = 'Control de Acceso <controldeacceso@incubasoft.com>'
if email_opcion == 0:  # GMAIL
    EMAIL_USE_TLS = True
    EMAIL_HOST = 'smtp.googlemail.com'
    EMAIL_PORT = 587
    EMAIL_HOST_USER = 'email@domain.com'
    EMAIL_HOST_PASSWORD = '********'
    EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
elif email_opcion == 1:  # AMAZON
    EMAIL_BACKEND = 'django_ses.SESBackend'
    # These are optional -- if they're set as environment variables they won't
    # need to be set here as well
    AWS_ACCESS_KEY_ID = ''
    AWS_SECRET_ACCESS_KEY = ''
    # Additionally, you can specify an optional region, like so:
    AWS_SES_REGION_NAME = 'us-east-1'
    AWS_SES_REGION_ENDPOINT = 'email.us-east-1.amazonaws.com'
    AWS_SES_AUTO_THROTTLE = 0.5  # (default; safety factor applied to rate limit)
    SERVER_EMAIL = 'email@domain.com'
    EMAIL_FROM = 'email@domain.com'

REST_FRAMEWORK = {
     'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
     ),
     'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
     )
}
